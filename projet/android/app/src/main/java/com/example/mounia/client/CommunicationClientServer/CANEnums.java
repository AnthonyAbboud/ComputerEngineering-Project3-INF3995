package com.example.mounia.client.CommunicationClientServer;

import java.nio.ByteBuffer;
import java.util.HashMap;

public class CANEnums
{
	public static class CANDataType
	{
		private static HashMap<Integer, String> intToStr = new HashMap<Integer, String>();
		public static String toString(int id) { return CANEnums.CANDataType.intToStr.get(id); }
		public static void init()
		{
			
			CANEnums.CANDataType.intToStr.put(0, "UNKNOWN");
			CANEnums.CANDataType.intToStr.put(1, "INT");
			CANEnums.CANDataType.intToStr.put(2, "FLOAT");
			CANEnums.CANDataType.intToStr.put(3, "UNSIGNED");
			CANEnums.CANDataType.intToStr.put(10, "TIMESTAMP");
			CANEnums.CANDataType.intToStr.put(11, "MAGIC");
			CANEnums.CANDataType.intToStr.put(15, "NONE");
		}
		
		public static int UNKNOWN = 0;
		public static int INT = 1;
		public static int FLOAT = 2;
		public static int UNSIGNED = 3;
		public static int TIMESTAMP = 10;
		public static int MAGIC = 11;
		public static int NONE = 15;
		
		public static Object parse(ByteBuffer bytes, int from, int typeTag)
		{
			if (typeTag == CANEnums.CANDataType.FLOAT)
				return (Object)new Double(bytes.getFloat(from));
			else if (typeTag == CANEnums.CANDataType.INT)
				return (Object)new Double(bytes.getInt(from));
			else
				return (Object)new Long(bytes.getInt(from) & 0x00000000ffffffffL);
		}
	}
	public static class CANSid
	{
		private static HashMap<Integer, String> intToStr = new HashMap<Integer, String>();
		public static String toString(int id) { return CANEnums.CANSid.intToStr.get(id); }
		public static void init()
		{
			
			CANEnums.CANSid.intToStr.put(1, "CANSID_RESERVED_1");
			CANEnums.CANSid.intToStr.put(2, "COMMAND_EMERGENCY_DEPLOY_DROGUE");
			CANEnums.CANSid.intToStr.put(3, "COMMAND_EMERGENCY_DEPLOY_MAIN");
			CANEnums.CANSid.intToStr.put(4, "MOTOR_EMERGENCY_VENT");
			CANEnums.CANSid.intToStr.put(5, "MOTOR_FUELING_STANDBY");
			CANEnums.CANSid.intToStr.put(6, "MOTOR_MANUAL_START");
			CANEnums.CANSid.intToStr.put(7, "MOTOR_ALLOW_MANUAL_START");
			CANEnums.CANSid.intToStr.put(8, "MOTOR_OVERRIDE_LAUNCH_READINESS");
			CANEnums.CANSid.intToStr.put(257, "COMMAND_DISARM");
			CANEnums.CANSid.intToStr.put(258, "COMMAND_ARM");
			CANEnums.CANSid.intToStr.put(259, "COMMAND_UNLOCK");
			CANEnums.CANSid.intToStr.put(260, "COMMAND_LOCK");
			CANEnums.CANSid.intToStr.put(261, "LVDM_CANNOT_TRIGGER_NOT_ARMED");
			CANEnums.CANSid.intToStr.put(262, "LVDM_LOCKED_CANNOT_DISARM");
			CANEnums.CANSid.intToStr.put(263, "LVDM_ARMING_STATUS");
			CANEnums.CANSid.intToStr.put(264, "LVDM_EMERGENCY_KABOOM_CALLED");
			CANEnums.CANSid.intToStr.put(265, "LVDM_TRIGGERED");
			CANEnums.CANSid.intToStr.put(266, "LVDM_CHARGES_BURNT");
			CANEnums.CANSid.intToStr.put(267, "LVDM_STATE");
			CANEnums.CANSid.intToStr.put(268, "LVDM_DIAGNOSTIC_FAILURE");
			CANEnums.CANSid.intToStr.put(269, "LVDM_RAMP_ALT");
			CANEnums.CANSid.intToStr.put(270, "LVDM_ACKNOWLEDGE");
			CANEnums.CANSid.intToStr.put(271, "LVDM_LOCKED");
			CANEnums.CANSid.intToStr.put(272, "VOTING_VSTRUCT_OVERFLOW");
			CANEnums.CANSid.intToStr.put(273, "VOTING_VSTRUCT_UPDATE_FAILURE");
			CANEnums.CANSid.intToStr.put(274, "MOTOR_OPTION_IS_LOCKED");
			CANEnums.CANSid.intToStr.put(275, "MOTOR_STATUS");
			CANEnums.CANSid.intToStr.put(276, "MOTOR_SLAVE_STATUS");
			CANEnums.CANSid.intToStr.put(277, "MOTOR_RESERVED1");
			CANEnums.CANSid.intToStr.put(278, "MOTOR_FUELING_CONTROL");
			CANEnums.CANSid.intToStr.put(279, "MOTOR_LAUNCH_IMMINENT");
			CANEnums.CANSid.intToStr.put(280, "MOTOR_SET_STATE");
			CANEnums.CANSid.intToStr.put(281, "MOTOR_SET_STATE_OVERRIDE");
			CANEnums.CANSid.intToStr.put(282, "MODULE_CRITICAL_FAILURE");
			CANEnums.CANSid.intToStr.put(283, "CUBESAT_CANNON");
			CANEnums.CANSid.intToStr.put(513, "COMMAND_RESET_MCU");
			CANEnums.CANSid.intToStr.put(514, "LVDM_HALL_ACKNOWLEDGE");
			CANEnums.CANSid.intToStr.put(515, "TIMER_SET");
			CANEnums.CANSid.intToStr.put(516, "CURRENT_FATTIME");
			CANEnums.CANSid.intToStr.put(517, "LVDM_BRIDGEWIRE_RES_DROGUE");
			CANEnums.CANSid.intToStr.put(518, "LVDM_BRIDGEWIRE_RES_MAIN");
			CANEnums.CANSid.intToStr.put(519, "MOTOR_TANK_TEMP");
			CANEnums.CANSid.intToStr.put(520, "MOTOR_TANK_PRESS");
			CANEnums.CANSid.intToStr.put(521, "MOTOR_COMBUSTION_CHAMBER_TEMP");
			CANEnums.CANSid.intToStr.put(522, "MOTOR_VENT_TEMP");
			CANEnums.CANSid.intToStr.put(523, "MOTOR_ACTUATOR_VOLTS");
			CANEnums.CANSid.intToStr.put(524, "BAR_PRESS1");
			CANEnums.CANSid.intToStr.put(525, "BAR_PRESS2");
			CANEnums.CANSid.intToStr.put(526, "RADIO_CONTROL");
			CANEnums.CANSid.intToStr.put(527, "RADIO_ACKNOWLEDGE");
			CANEnums.CANSid.intToStr.put(528, "SD_ENABLE_LOGGING");
			CANEnums.CANSid.intToStr.put(529, "LOGGING_ACKNOWLEDGE");
			CANEnums.CANSid.intToStr.put(769, "LSM_ACC_X");
			CANEnums.CANSid.intToStr.put(770, "LSM_ACC_Y");
			CANEnums.CANSid.intToStr.put(771, "LSM_ACC_Z");
			CANEnums.CANSid.intToStr.put(772, "ADXL_ACC_X");
			CANEnums.CANSid.intToStr.put(773, "ADXL_ACC_Y");
			CANEnums.CANSid.intToStr.put(774, "ADXL_ACC_Z");
			CANEnums.CANSid.intToStr.put(775, "ICM_ACC_X");
			CANEnums.CANSid.intToStr.put(776, "ICM_ACC_Y");
			CANEnums.CANSid.intToStr.put(777, "ICM_ACC_Z");
			CANEnums.CANSid.intToStr.put(778, "LSM_MAGN_FIELD_X");
			CANEnums.CANSid.intToStr.put(779, "LSM_MAGN_FIELD_Y");
			CANEnums.CANSid.intToStr.put(780, "LSM_MAGN_FIELD_Z");
			CANEnums.CANSid.intToStr.put(781, "L3G_RATE_X");
			CANEnums.CANSid.intToStr.put(782, "L3G_RATE_Y");
			CANEnums.CANSid.intToStr.put(783, "L3G_RATE_Z");
			CANEnums.CANSid.intToStr.put(784, "FANCY_RATE_X");
			CANEnums.CANSid.intToStr.put(785, "FANCY_RATE_Y");
			CANEnums.CANSid.intToStr.put(786, "FANCY_RATE_Z");
			CANEnums.CANSid.intToStr.put(787, "ICM_RATE_X");
			CANEnums.CANSid.intToStr.put(788, "ICM_RATE_Y");
			CANEnums.CANSid.intToStr.put(789, "ICM_RATE_Z");
			CANEnums.CANSid.intToStr.put(790, "FILTERED_RATE_X");
			CANEnums.CANSid.intToStr.put(791, "FILTERED_RATE_Y");
			CANEnums.CANSid.intToStr.put(792, "FILTERED_RATE_Z");
			CANEnums.CANSid.intToStr.put(793, "TEMPERATURE");
			CANEnums.CANSid.intToStr.put(794, "BAR_TEMPERATURE1");
			CANEnums.CANSid.intToStr.put(795, "BAR_TEMPERATURE2");
			CANEnums.CANSid.intToStr.put(796, "ONE_WIRE_TEMPERATURE");
			CANEnums.CANSid.intToStr.put(797, "GPS1_LATITUDE");
			CANEnums.CANSid.intToStr.put(798, "GPS2_LATITUDE");
			CANEnums.CANSid.intToStr.put(799, "GPS1_LONGITUDE");
			CANEnums.CANSid.intToStr.put(800, "GPS2_LONGITUDE");
			CANEnums.CANSid.intToStr.put(801, "GPS1_ALT_MSL");
			CANEnums.CANSid.intToStr.put(802, "GPS2_ALT_MSL");
			CANEnums.CANSid.intToStr.put(803, "GPS1_GND_SPEED");
			CANEnums.CANSid.intToStr.put(804, "GPS2_GND_SPEED");
			CANEnums.CANSid.intToStr.put(805, "GPS1_FIX_QUAL");
			CANEnums.CANSid.intToStr.put(806, "GPS2_FIX_QUAL");
			CANEnums.CANSid.intToStr.put(807, "GPS1_DATE_TIME");
			CANEnums.CANSid.intToStr.put(808, "GPS2_DATE_TIME");
			CANEnums.CANSid.intToStr.put(809, "GPS1_NB_SAT");
			CANEnums.CANSid.intToStr.put(810, "GPS2_NB_SAT");
			CANEnums.CANSid.intToStr.put(811, "GPS1_TRACK_ANG");
			CANEnums.CANSid.intToStr.put(812, "GPS2_TRACK_ANG");
			CANEnums.CANSid.intToStr.put(813, "GPS1_MAGN_VAR_TRACK");
			CANEnums.CANSid.intToStr.put(814, "GPS2_MAGN_VAR");
			CANEnums.CANSid.intToStr.put(815, "MOTOR_WATCHDOG_TIME_LEFT");
			CANEnums.CANSid.intToStr.put(816, "MOTOR_DISCONNECT_FUELING");
			CANEnums.CANSid.intToStr.put(817, "MOTOR_OVERRIDE_DISCONNECTION_PROTECTION");
			CANEnums.CANSid.intToStr.put(818, "MOTOR_SET_FUELING_LOCK");
			CANEnums.CANSid.intToStr.put(819, "STATUS_LATCH_RESET");
			CANEnums.CANSid.intToStr.put(820, "PUM_3V3_CURRENT");
			CANEnums.CANSid.intToStr.put(821, "PUM_5V_CURRENT");
			CANEnums.CANSid.intToStr.put(822, "PUM_BAT1_CURRENT");
			CANEnums.CANSid.intToStr.put(823, "PUM_BAT2_CURRENT");
			CANEnums.CANSid.intToStr.put(824, "PUM_BAT3_CURRENT");
			CANEnums.CANSid.intToStr.put(825, "PUM_VBAT1");
			CANEnums.CANSid.intToStr.put(826, "PUM_VBAT2");
			CANEnums.CANSid.intToStr.put(827, "PUM_VBAT3");
			CANEnums.CANSid.intToStr.put(828, "PUM_45V_CHARGED");
			CANEnums.CANSid.intToStr.put(829, "RPM_VOLTAGE");
			CANEnums.CANSid.intToStr.put(830, "RPM_CURRENT");
			CANEnums.CANSid.intToStr.put(831, "RPM_45V");
			CANEnums.CANSid.intToStr.put(832, "RADIO_STATS");
			CANEnums.CANSid.intToStr.put(833, "ERR_CAN_GOT_BAD_MAGIC_BYTES");
			CANEnums.CANSid.intToStr.put(834, "ERR_CAN_SWITCHING_BUS");
			CANEnums.CANSid.intToStr.put(835, "CALIB_SENSOR");
			CANEnums.CANSid.intToStr.put(836, "LVDM_CHARGED");
			CANEnums.CANSid.intToStr.put(837, "MPU_ACC_X");
			CANEnums.CANSid.intToStr.put(838, "MPU_ACC_Y");
			CANEnums.CANSid.intToStr.put(839, "MPU_ACC_Z");
			CANEnums.CANSid.intToStr.put(840, "MPU_RATE_X");
			CANEnums.CANSid.intToStr.put(841, "MPU_RATE_Y");
			CANEnums.CANSid.intToStr.put(842, "MPU_RATE_Z");
			CANEnums.CANSid.intToStr.put(843, "MPU_MAGN_FIELD_X");
			CANEnums.CANSid.intToStr.put(844, "MPU_MAGN_FIELD_Y");
			CANEnums.CANSid.intToStr.put(845, "MPU_MAGN_FIELD_Z");
			CANEnums.CANSid.intToStr.put(846, "SL_ALTITUDE");
			CANEnums.CANSid.intToStr.put(1025, "MODULE_BASE_INIT_SUCCESS");
			CANEnums.CANSid.intToStr.put(1026, "MODULE_SPECIFIC_INIT_SUCCESS");
			CANEnums.CANSid.intToStr.put(1027, "MODULE_SPECIFIC_INIT_RECOVERABLE_ERROR");
			CANEnums.CANSid.intToStr.put(1028, "MODULE_SPECIFIC_INIT_FAILURE");
			CANEnums.CANSid.intToStr.put(1029, "MODULE_HEARTBEAT");
			CANEnums.CANSid.intToStr.put(1030, "MODULE_GET_STATUS");
			CANEnums.CANSid.intToStr.put(1031, "SD_CARD_WRITE_ERROR");
			CANEnums.CANSid.intToStr.put(1032, "GS_UART_WRITE_ERROR");
			CANEnums.CANSid.intToStr.put(1033, "GS_UART_READ_ERROR");
			CANEnums.CANSid.intToStr.put(1034, "ADIRM_DATA_QUEUE_FULL");
			CANEnums.CANSid.intToStr.put(1035, "SD_CARD_SPACE_LEFT");
			CANEnums.CANSid.intToStr.put(1036, "SD_TOTAL_BYTES_WRITTEN");
			CANEnums.CANSid.intToStr.put(1037, "SENSOR_CALIB_X");
			CANEnums.CANSid.intToStr.put(1038, "SENSOR_CALIB_Y");
			CANEnums.CANSid.intToStr.put(1039, "SENSOR_CALIB_Z");
			CANEnums.CANSid.intToStr.put(1040, "MODULE_POS");
			CANEnums.CANSid.intToStr.put(1041, "MODULE_NB");
			CANEnums.CANSid.intToStr.put(1042, "COMMAND_REQ_MOD_POS_NB");
			CANEnums.CANSid.intToStr.put(1537, "CAN_TEST_INT_MAGIC");
			CANEnums.CANSid.intToStr.put(1538, "CAN_TEST_INT_TIMESTAMP");
			CANEnums.CANSid.intToStr.put(1539, "CAN_TEST_INT_INT");
			CANEnums.CANSid.intToStr.put(1540, "CAN_TEST_INT_FLOAT");
			CANEnums.CANSid.intToStr.put(1541, "CAN_TEST_INT_UNSIGNED");
			CANEnums.CANSid.intToStr.put(1542, "CAN_TEST_FLOAT_MAGIC");
			CANEnums.CANSid.intToStr.put(1543, "CAN_TEST_FLOAT_TIMESTAMP");
			CANEnums.CANSid.intToStr.put(1544, "CAN_TEST_FLOAT_INT");
			CANEnums.CANSid.intToStr.put(1545, "CAN_TEST_FLOAT_FLOAT");
			CANEnums.CANSid.intToStr.put(1546, "CAN_TEST_FLOAT_UNSIGNED");
			CANEnums.CANSid.intToStr.put(1547, "CAN_TEST_UNSIGNED_MAGIC");
			CANEnums.CANSid.intToStr.put(1548, "CAN_TEST_UNSIGNED_TIMESTAMP");
			CANEnums.CANSid.intToStr.put(1549, "CAN_TEST_UNSIGNED_INT");
			CANEnums.CANSid.intToStr.put(1550, "CAN_TEST_UNSIGNED_FLOAT");
			CANEnums.CANSid.intToStr.put(1551, "CAN_TEST_UNSIGNED_UNSIGNED");
			CANEnums.CANSid.intToStr.put(1552, "CAN_TEST_MAGIC_NONE");
			CANEnums.CANSid.intToStr.put(1553, "CAN_TEST_TIMESTAMP_MAGIC");
		}
		
		public static int CANSID_RESERVED_1 = 1;
		public static int COMMAND_EMERGENCY_DEPLOY_DROGUE = 2;
		public static int COMMAND_EMERGENCY_DEPLOY_MAIN = 3;
		public static int MOTOR_EMERGENCY_VENT = 4;
		public static int MOTOR_FUELING_STANDBY = 5;
		public static int MOTOR_MANUAL_START = 6;
		public static int MOTOR_ALLOW_MANUAL_START = 7;
		public static int MOTOR_OVERRIDE_LAUNCH_READINESS = 8;
		public static int COMMAND_DISARM = 257;
		public static int COMMAND_ARM = 258;
		public static int COMMAND_UNLOCK = 259;
		public static int COMMAND_LOCK = 260;
		public static int LVDM_CANNOT_TRIGGER_NOT_ARMED = 261;
		public static int LVDM_LOCKED_CANNOT_DISARM = 262;
		public static int LVDM_ARMING_STATUS = 263;
		public static int LVDM_EMERGENCY_KABOOM_CALLED = 264;
		public static int LVDM_TRIGGERED = 265;
		public static int LVDM_CHARGES_BURNT = 266;
		public static int LVDM_STATE = 267;
		public static int LVDM_DIAGNOSTIC_FAILURE = 268;
		public static int LVDM_RAMP_ALT = 269;
		public static int LVDM_ACKNOWLEDGE = 270;
		public static int LVDM_LOCKED = 271;
		public static int VOTING_VSTRUCT_OVERFLOW = 272;
		public static int VOTING_VSTRUCT_UPDATE_FAILURE = 273;
		public static int MOTOR_OPTION_IS_LOCKED = 274;
		public static int MOTOR_STATUS = 275;
		public static int MOTOR_SLAVE_STATUS = 276;
		public static int MOTOR_RESERVED1 = 277;
		public static int MOTOR_FUELING_CONTROL = 278;
		public static int MOTOR_LAUNCH_IMMINENT = 279;
		public static int MOTOR_SET_STATE = 280;
		public static int MOTOR_SET_STATE_OVERRIDE = 281;
		public static int MODULE_CRITICAL_FAILURE = 282;
		public static int CUBESAT_CANNON = 283;
		public static int COMMAND_RESET_MCU = 513;
		public static int LVDM_HALL_ACKNOWLEDGE = 514;
		public static int TIMER_SET = 515;
		public static int CURRENT_FATTIME = 516;
		public static int LVDM_BRIDGEWIRE_RES_DROGUE = 517;
		public static int LVDM_BRIDGEWIRE_RES_MAIN = 518;
		public static int MOTOR_TANK_TEMP = 519;
		public static int MOTOR_TANK_PRESS = 520;
		public static int MOTOR_COMBUSTION_CHAMBER_TEMP = 521;
		public static int MOTOR_VENT_TEMP = 522;
		public static int MOTOR_ACTUATOR_VOLTS = 523;
		public static int BAR_PRESS1 = 524;
		public static int BAR_PRESS2 = 525;
		public static int RADIO_CONTROL = 526;
		public static int RADIO_ACKNOWLEDGE = 527;
		public static int SD_ENABLE_LOGGING = 528;
		public static int LOGGING_ACKNOWLEDGE = 529;
		public static int LSM_ACC_X = 769;
		public static int LSM_ACC_Y = 770;
		public static int LSM_ACC_Z = 771;
		public static int ADXL_ACC_X = 772;
		public static int ADXL_ACC_Y = 773;
		public static int ADXL_ACC_Z = 774;
		public static int ICM_ACC_X = 775;
		public static int ICM_ACC_Y = 776;
		public static int ICM_ACC_Z = 777;
		public static int LSM_MAGN_FIELD_X = 778;
		public static int LSM_MAGN_FIELD_Y = 779;
		public static int LSM_MAGN_FIELD_Z = 780;
		public static int L3G_RATE_X = 781;
		public static int L3G_RATE_Y = 782;
		public static int L3G_RATE_Z = 783;
		public static int FANCY_RATE_X = 784;
		public static int FANCY_RATE_Y = 785;
		public static int FANCY_RATE_Z = 786;
		public static int ICM_RATE_X = 787;
		public static int ICM_RATE_Y = 788;
		public static int ICM_RATE_Z = 789;
		public static int FILTERED_RATE_X = 790;
		public static int FILTERED_RATE_Y = 791;
		public static int FILTERED_RATE_Z = 792;
		public static int TEMPERATURE = 793;
		public static int BAR_TEMPERATURE1 = 794;
		public static int BAR_TEMPERATURE2 = 795;
		public static int ONE_WIRE_TEMPERATURE = 796;
		public static int GPS1_LATITUDE = 797;
		public static int GPS2_LATITUDE = 798;
		public static int GPS1_LONGITUDE = 799;
		public static int GPS2_LONGITUDE = 800;
		public static int GPS1_ALT_MSL = 801;
		public static int GPS2_ALT_MSL = 802;
		public static int GPS1_GND_SPEED = 803;
		public static int GPS2_GND_SPEED = 804;
		public static int GPS1_FIX_QUAL = 805;
		public static int GPS2_FIX_QUAL = 806;
		public static int GPS1_DATE_TIME = 807;
		public static int GPS2_DATE_TIME = 808;
		public static int GPS1_NB_SAT = 809;
		public static int GPS2_NB_SAT = 810;
		public static int GPS1_TRACK_ANG = 811;
		public static int GPS2_TRACK_ANG = 812;
		public static int GPS1_MAGN_VAR_TRACK = 813;
		public static int GPS2_MAGN_VAR = 814;
		public static int MOTOR_WATCHDOG_TIME_LEFT = 815;
		public static int MOTOR_DISCONNECT_FUELING = 816;
		public static int MOTOR_OVERRIDE_DISCONNECTION_PROTECTION = 817;
		public static int MOTOR_SET_FUELING_LOCK = 818;
		public static int STATUS_LATCH_RESET = 819;
		public static int PUM_3V3_CURRENT = 820;
		public static int PUM_5V_CURRENT = 821;
		public static int PUM_BAT1_CURRENT = 822;
		public static int PUM_BAT2_CURRENT = 823;
		public static int PUM_BAT3_CURRENT = 824;
		public static int PUM_VBAT1 = 825;
		public static int PUM_VBAT2 = 826;
		public static int PUM_VBAT3 = 827;
		public static int PUM_45V_CHARGED = 828;
		public static int RPM_VOLTAGE = 829;
		public static int RPM_CURRENT = 830;
		public static int RPM_45V = 831;
		public static int RADIO_STATS = 832;
		public static int ERR_CAN_GOT_BAD_MAGIC_BYTES = 833;
		public static int ERR_CAN_SWITCHING_BUS = 834;
		public static int CALIB_SENSOR = 835;
		public static int LVDM_CHARGED = 836;
		public static int MPU_ACC_X = 837;
		public static int MPU_ACC_Y = 838;
		public static int MPU_ACC_Z = 839;
		public static int MPU_RATE_X = 840;
		public static int MPU_RATE_Y = 841;
		public static int MPU_RATE_Z = 842;
		public static int MPU_MAGN_FIELD_X = 843;
		public static int MPU_MAGN_FIELD_Y = 844;
		public static int MPU_MAGN_FIELD_Z = 845;
		public static int SL_ALTITUDE = 846;
		public static int MODULE_BASE_INIT_SUCCESS = 1025;
		public static int MODULE_SPECIFIC_INIT_SUCCESS = 1026;
		public static int MODULE_SPECIFIC_INIT_RECOVERABLE_ERROR = 1027;
		public static int MODULE_SPECIFIC_INIT_FAILURE = 1028;
		public static int MODULE_HEARTBEAT = 1029;
		public static int MODULE_GET_STATUS = 1030;
		public static int SD_CARD_WRITE_ERROR = 1031;
		public static int GS_UART_WRITE_ERROR = 1032;
		public static int GS_UART_READ_ERROR = 1033;
		public static int ADIRM_DATA_QUEUE_FULL = 1034;
		public static int SD_CARD_SPACE_LEFT = 1035;
		public static int SD_TOTAL_BYTES_WRITTEN = 1036;
		public static int SENSOR_CALIB_X = 1037;
		public static int SENSOR_CALIB_Y = 1038;
		public static int SENSOR_CALIB_Z = 1039;
		public static int MODULE_POS = 1040;
		public static int MODULE_NB = 1041;
		public static int COMMAND_REQ_MOD_POS_NB = 1042;
		public static int CAN_TEST_INT_MAGIC = 1537;
		public static int CAN_TEST_INT_TIMESTAMP = 1538;
		public static int CAN_TEST_INT_INT = 1539;
		public static int CAN_TEST_INT_FLOAT = 1540;
		public static int CAN_TEST_INT_UNSIGNED = 1541;
		public static int CAN_TEST_FLOAT_MAGIC = 1542;
		public static int CAN_TEST_FLOAT_TIMESTAMP = 1543;
		public static int CAN_TEST_FLOAT_INT = 1544;
		public static int CAN_TEST_FLOAT_FLOAT = 1545;
		public static int CAN_TEST_FLOAT_UNSIGNED = 1546;
		public static int CAN_TEST_UNSIGNED_MAGIC = 1547;
		public static int CAN_TEST_UNSIGNED_TIMESTAMP = 1548;
		public static int CAN_TEST_UNSIGNED_INT = 1549;
		public static int CAN_TEST_UNSIGNED_FLOAT = 1550;
		public static int CAN_TEST_UNSIGNED_UNSIGNED = 1551;
		public static int CAN_TEST_MAGIC_NONE = 1552;
		public static int CAN_TEST_TIMESTAMP_MAGIC = 1553;
	}
	public static class CANMsgDataTypes
	{
		public static class Pair
		{
			public int first;
			public int second;
			public Pair(int first, int second) { this.first = first; this.second = second; }
			@Override public boolean equals(Object thatObj)
			{
				Pair that = (Pair)thatObj;
				return this.first == that.first && this.second == that.second;
			}
			@Override public int hashCode()
			{
				return first ^ (second << 1);
			}
		}
		private static HashMap<Integer, Pair> idToTypes = new HashMap<Integer, Pair>();
		public static Pair typesof(int id) { return CANEnums.CANMsgDataTypes.idToTypes.get(id); }
		public static void init()
		{
			
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CANSID_RESERVED_1, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.COMMAND_EMERGENCY_DEPLOY_DROGUE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.COMMAND_EMERGENCY_DEPLOY_MAIN, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_EMERGENCY_VENT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_FUELING_STANDBY, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_MANUAL_START, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_ALLOW_MANUAL_START, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_OVERRIDE_LAUNCH_READINESS, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.COMMAND_DISARM, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.COMMAND_ARM, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.COMMAND_UNLOCK, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.COMMAND_LOCK, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_CANNOT_TRIGGER_NOT_ARMED, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.TIMESTAMP, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_LOCKED_CANNOT_DISARM, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.TIMESTAMP, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_ARMING_STATUS, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_EMERGENCY_KABOOM_CALLED, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_TRIGGERED, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_CHARGES_BURNT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_STATE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_DIAGNOSTIC_FAILURE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_RAMP_ALT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_ACKNOWLEDGE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_LOCKED, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.VOTING_VSTRUCT_OVERFLOW, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.TIMESTAMP, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.VOTING_VSTRUCT_UPDATE_FAILURE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.TIMESTAMP, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_OPTION_IS_LOCKED, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_STATUS, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_SLAVE_STATUS, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_RESERVED1, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_FUELING_CONTROL, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_LAUNCH_IMMINENT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_SET_STATE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_SET_STATE_OVERRIDE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MODULE_CRITICAL_FAILURE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.UNSIGNED));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CUBESAT_CANNON, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.COMMAND_RESET_MCU, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_HALL_ACKNOWLEDGE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.TIMER_SET, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CURRENT_FATTIME, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_BRIDGEWIRE_RES_DROGUE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_BRIDGEWIRE_RES_MAIN, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_TANK_TEMP, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_TANK_PRESS, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_COMBUSTION_CHAMBER_TEMP, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_VENT_TEMP, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_ACTUATOR_VOLTS, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.BAR_PRESS1, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.BAR_PRESS2, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.RADIO_CONTROL, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.RADIO_ACKNOWLEDGE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.SD_ENABLE_LOGGING, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LOGGING_ACKNOWLEDGE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LSM_ACC_X, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LSM_ACC_Y, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LSM_ACC_Z, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.ADXL_ACC_X, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.ADXL_ACC_Y, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.ADXL_ACC_Z, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.ICM_ACC_X, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.ICM_ACC_Y, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.ICM_ACC_Z, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LSM_MAGN_FIELD_X, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LSM_MAGN_FIELD_Y, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LSM_MAGN_FIELD_Z, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.L3G_RATE_X, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.L3G_RATE_Y, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.L3G_RATE_Z, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.FANCY_RATE_X, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.FANCY_RATE_Y, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.FANCY_RATE_Z, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.ICM_RATE_X, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.ICM_RATE_Y, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.ICM_RATE_Z, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.FILTERED_RATE_X, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.FILTERED_RATE_Y, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.FILTERED_RATE_Z, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.TEMPERATURE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.BAR_TEMPERATURE1, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.BAR_TEMPERATURE2, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.ONE_WIRE_TEMPERATURE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.FLOAT));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS1_LATITUDE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS2_LATITUDE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS1_LONGITUDE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS2_LONGITUDE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS1_ALT_MSL, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS2_ALT_MSL, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS1_GND_SPEED, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS2_GND_SPEED, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS1_FIX_QUAL, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS2_FIX_QUAL, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS1_DATE_TIME, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS2_DATE_TIME, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS1_NB_SAT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS2_NB_SAT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS1_TRACK_ANG, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS2_TRACK_ANG, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS1_MAGN_VAR_TRACK, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GPS2_MAGN_VAR, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_WATCHDOG_TIME_LEFT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_DISCONNECT_FUELING, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_OVERRIDE_DISCONNECTION_PROTECTION, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MOTOR_SET_FUELING_LOCK, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.STATUS_LATCH_RESET, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.PUM_3V3_CURRENT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.PUM_5V_CURRENT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.PUM_BAT1_CURRENT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.PUM_BAT2_CURRENT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.PUM_BAT3_CURRENT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.PUM_VBAT1, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.PUM_VBAT2, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.PUM_VBAT3, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.PUM_45V_CHARGED, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.RPM_VOLTAGE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.RPM_CURRENT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.RPM_45V, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.RADIO_STATS, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.UNSIGNED));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.ERR_CAN_GOT_BAD_MAGIC_BYTES, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.ERR_CAN_SWITCHING_BUS, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CALIB_SENSOR, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.LVDM_CHARGED, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MPU_ACC_X, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MPU_ACC_Y, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MPU_ACC_Z, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MPU_RATE_X, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MPU_RATE_Y, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MPU_RATE_Z, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MPU_MAGN_FIELD_X, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MPU_MAGN_FIELD_Y, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MPU_MAGN_FIELD_Z, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.SL_ALTITUDE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MODULE_BASE_INIT_SUCCESS, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.TIMESTAMP, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MODULE_SPECIFIC_INIT_SUCCESS, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.TIMESTAMP, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MODULE_SPECIFIC_INIT_RECOVERABLE_ERROR, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MODULE_SPECIFIC_INIT_FAILURE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.TIMESTAMP, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MODULE_HEARTBEAT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.TIMESTAMP, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MODULE_GET_STATUS, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.SD_CARD_WRITE_ERROR, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GS_UART_WRITE_ERROR, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.GS_UART_READ_ERROR, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.ADIRM_DATA_QUEUE_FULL, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.SD_CARD_SPACE_LEFT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.INT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.SD_TOTAL_BYTES_WRITTEN, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.SENSOR_CALIB_X, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.UNSIGNED));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.SENSOR_CALIB_Y, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.UNSIGNED));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.SENSOR_CALIB_Z, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.UNSIGNED));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MODULE_POS, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.MODULE_NB, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.COMMAND_REQ_MOD_POS_NB, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_INT_MAGIC, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.INT, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_INT_TIMESTAMP, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.INT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_INT_INT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.INT, CANEnums.CANDataType.INT));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_INT_FLOAT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.INT, CANEnums.CANDataType.FLOAT));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_INT_UNSIGNED, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.INT, CANEnums.CANDataType.UNSIGNED));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_FLOAT_MAGIC, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_FLOAT_TIMESTAMP, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_FLOAT_INT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.INT));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_FLOAT_FLOAT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.FLOAT));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_FLOAT_UNSIGNED, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.FLOAT, CANEnums.CANDataType.UNSIGNED));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_UNSIGNED_MAGIC, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.MAGIC));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_UNSIGNED_TIMESTAMP, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.TIMESTAMP));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_UNSIGNED_INT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.INT));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_UNSIGNED_FLOAT, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.FLOAT));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_UNSIGNED_UNSIGNED, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.UNSIGNED, CANEnums.CANDataType.UNSIGNED));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_MAGIC_NONE, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.MAGIC, CANEnums.CANDataType.NONE));
			CANEnums.CANMsgDataTypes.idToTypes.put(CANEnums.CANSid.CAN_TEST_TIMESTAMP_MAGIC, new CANEnums.CANMsgDataTypes.Pair(CANEnums.CANDataType.TIMESTAMP, CANEnums.CANDataType.MAGIC));
		}
	}
	public static void init()
	{
		CANEnums.CANDataType.init();
		CANEnums.CANSid.init();
		CANEnums.CANMsgDataTypes.init();
	}
}
